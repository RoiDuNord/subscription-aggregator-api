services:
  db:
    image: postgres:17.6-alpine
    container_name: pg-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 120s
    restart: unless-stopped
    networks:
      - app-net
  migrate:
    image: migrate/migrate:latest
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./db:/migrations
    command: >
      -path=/migrations
      -database=postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSLMODE}
      -verbose
      up
    networks:
      - app-net

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: go-app
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      SQL_INIT_PATH: /docker_app/db/init.sql
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    restart: no
    networks:
      - app-net

volumes:
  postgres-data:

networks:
  app-net:
